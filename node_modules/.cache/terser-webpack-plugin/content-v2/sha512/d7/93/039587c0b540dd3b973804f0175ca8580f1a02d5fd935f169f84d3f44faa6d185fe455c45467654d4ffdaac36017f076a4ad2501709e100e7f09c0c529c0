{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\react\\\\src\\\\components\\\\card.js\",\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\react\\\\src\\\\components\\\\cardlist.js\",\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\react\\\\src\\\\components\\\\searchbox.js\",\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\react\\\\src\\\\components\\\\scroll.js\",\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\react\\\\src\\\\containers\\\\app.js\",\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\react\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\react\\\\src\\\\index.js\"],\"names\":[\"Card\",\"_ref\",\"name\",\"email\",\"id\",\"react_default\",\"a\",\"createElement\",\"className\",\"alt\",\"src\",\"CardList\",\"robots\",\"map\",\"user\",\"i\",\"card\",\"key\",\"Searchbox\",\"searchfield\",\"searchChange\",\"type\",\"placeholder\",\"onChange\",\"Scroll\",\"props\",\"style\",\"overflow\",\"border\",\"height\",\"children\",\"App\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"onSearchChange\",\"event\",\"setState\",\"target\",\"value\",\"state\",\"_this2\",\"fetch\",\"then\",\"response\",\"json\",\"users\",\"_this3\",\"filteredRobots\",\"filter\",\"toLowerCase\",\"includes\",\"length\",\"searchbox\",\"components_scroll\",\"cardlist\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"containers_app\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"yNAceA,EAZF,SAAAC,GAAyB,IAAtBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,MAAgBF,EAATG,GAC5B,OACCC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,uDACfH,EAAAC,EAAAC,cAAA,MAAA,CAAKE,IAAI,SAASC,IAAK,uCACvBL,EAAAC,EAAAC,cAAA,MAAA,KACCF,EAAAC,EAAAC,cAAA,KAAA,KAAA,IAAML,EAAN,KACAG,EAAAC,EAAAC,cAAA,IAAA,KAAA,IAAKJ,EAAL,QCeYQ,EApBE,SAAAV,GAAgB,IAAbW,EAAaX,EAAbW,OAClB,OACCP,EAAAC,EAAAC,cAAA,MAAA,KAECK,EAAOC,IAAI,SAAEC,EAAMC,GACpB,OACIV,EAAAC,EAAAC,cAACS,EAAD,CACAC,IAAKF,EACLX,GAAIQ,EAAOG,GAAGX,GACdF,KAAMU,EAAOG,GAAGb,KAChBC,MAAOS,EAAOG,GAAGZ,YCETe,EAbG,SAAAjB,GAAmCA,EAAhCkB,YAAgC,IAAnBC,EAAmBnB,EAAnBmB,aACjC,OACMf,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,QAAA,CACCC,UAAU,mCACVa,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCCHI,EARA,SAACC,GACf,OACMpB,EAAAC,EAAAC,cAAA,MAAA,CAAKmB,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,UACpEJ,EAAMK,WCsCEC,qBAnCd,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACbC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAYAI,eAAiB,SAACC,GACjBR,EAAKS,SAAS,CAAEtB,YAAaqB,EAAME,OAAOC,SAZ3CX,EAAKY,MAAQ,CACZhC,OAAQ,GACRO,YAAa,IAJDa,mFAOS,IAAAa,EAAAV,KACnBW,MAAM,8CACLC,KAAK,SAAAC,GAAQ,OAAGA,EAASC,SACzBF,KAAK,SAAAG,GAAK,OAAIL,EAAKJ,SAAS,CAAE7B,OAAQsC,uCAMlC,IAAAC,EAAAhB,KACFiB,EAAiBjB,KAAKS,MAAMhC,OAAOyC,OAAO,SAAAzC,GAC9C,OAAOA,EAAOV,KAAKoD,cAAcC,SAASJ,EAAKP,MAAMzB,YAAYmC,iBAElE,OAAiC,IAA7BnB,KAAKS,MAAMhC,OAAO4C,OACdnD,EAAAC,EAAAC,cAAA,KAAA,KAAA,WAGTF,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,MACfH,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,MAAd,eACAH,EAAAC,EAAAC,cAACkD,EAAD,CAAWrC,aAAce,KAAKI,iBAC9BlC,EAAAC,EAAAC,cAACmD,EAAD,KACIrD,EAAAC,EAAAC,cAACoD,EAAD,CAAU/C,OAAQwC,aA7BNQ,EAAAA,YCKCC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iECXNC,EAAAA,EAASC,OAAO9D,EAAAC,EAAAC,cAAC6D,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1B,KAAK,SAAA2B,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from 'react';\\r\\n\\r\\nconst Card = ({ name, email, id }) => {\\r\\n\\treturn (\\r\\n\\t\\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\\r\\n\\t\\t<img alt='robots' src={'https://robohash.org/$[id]?200*200'} />\\r\\n\\t\\t<div>\\r\\n\\t\\t <h2> {name} </h2>\\r\\n\\t\\t <p> {email} </p>\\r\\n\\t\\t </div>\\r\\n\\t\\t </div>\\r\\n\\t\\t);\\r\\n}\\r\\n\\r\\nexport default Card;\",\"import React from 'react';\\r\\nimport Card from './card';\\r\\n\\r\\nconst CardList = ({ robots }) => {\\r\\n\\t\\treturn (\\r\\n\\t\\t\\t<div>\\r\\n\\t\\t\\t{\\r\\n\\t\\t\\t\\trobots.map(( user, i) => {\\r\\n\\t\\t\\treturn(\\r\\n\\t\\t     <Card\\r\\n\\t\\t     key={i}\\r\\n\\t\\t     id={robots[i].id} \\r\\n\\t\\t     name={robots[i].name} \\r\\n\\t\\t     email={robots[i].email} \\r\\n\\t\\t     />\\r\\n\\t\\t     );\\r\\n\\t})\\r\\n\\t    }      \\r\\n         </div>\\r\\n\\t\\r\\n\\t\\t);\\r\\n}\\r\\n\\r\\nexport default CardList;\",\"import React from 'react';\\r\\n\\r\\nconst Searchbox = ({ searchfield, searchChange }) => {\\r\\n\\treturn (\\r\\n       <div className='pa2'>\\r\\n       <input \\r\\n        className='pa3 ba b--green bg-lightest-blue'\\r\\n        type='search'\\r\\n        placeholder='search robots'\\r\\n        onChange={searchChange}\\r\\n        />\\r\\n        </div>\\r\\n\\r\\n\\t\\t);\\r\\n}\\r\\nexport default Searchbox;\",\"import React from 'react';\\r\\n\\r\\nconst Scroll = (props) => {\\r\\n\\treturn (\\r\\n       <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px' }}>\\r\\n       {props.children}\\r\\n       </div>\\r\\n\\t\\t);\\r\\n};\\r\\n\\r\\nexport default Scroll;\",\" import React, { Component } from 'react' ;\\r\\n import CardList from '../components/cardlist';\\r\\n import SearchBox from '../components/searchbox';\\r\\n import Scroll from '../components/scroll';\\r\\n import './app.css';\\r\\n\\r\\n\\r\\n class App extends Component {\\r\\n \\tconstructor() {\\r\\n \\t\\tsuper()\\r\\n \\t\\tthis.state = {\\r\\n \\t\\t\\trobots: [],\\r\\n \\t\\t\\tsearchfield: ''\\r\\n \\t\\t}\\r\\n \\t}\\r\\n     componentDidMount() {\\r\\n     \\tfetch('https://jsonplaceholder.typicode.com/users')\\r\\n     \\t.then(response=> response.json())\\r\\n     \\t.then(users => this.setState({ robots: users}));\\r\\n     }\\r\\n\\r\\n \\t onSearchChange = (event) => {\\r\\n \\t \\tthis.setState({ searchfield: event.target.value }) \\r\\n \\t }\\r\\n \\trender() {\\r\\n \\t\\tconst filteredRobots = this.state.robots.filter(robots =>{\\r\\n \\t \\t\\treturn robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\\r\\n \\t \\t})\\r\\n \\t \\tif (this.state.robots.length === 0) {\\r\\n \\t \\t\\treturn <h1>Loading</h1>\\r\\n \\t \\t} else {\\r\\n \\treturn (\\r\\n \\t\\t<div className='tc'>\\r\\n \\t\\t<h1 className='f2'>RoboFriends</h1>\\r\\n \\t\\t<SearchBox searchChange={this.onSearchChange}/>\\r\\n \\t\\t<Scroll>\\r\\n       <CardList robots={filteredRobots}/>\\r\\n       </Scroll>\\r\\n       </div>\\r\\n \\t\\t);\\r\\n }\\r\\n}\\r\\n}\\r\\n export default App;\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './containers/app';\\nimport * as serviceWorker from './serviceWorker';\\nimport 'tachyons';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(e,t,n){},15:function(e,t,n){},17:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),o=n(2),c=n.n(o),l=(n(14),n(3)),i=n(4),s=n(6),h=n(5),u=n(7),m=function(e){var t=e.name,n=e.email;e.id;return r.a.createElement(\"div\",{className:\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\"},r.a.createElement(\"img\",{alt:\"robots\",src:\"https://robohash.org/$[id]?200*200\"}),r.a.createElement(\"div\",null,r.a.createElement(\"h2\",null,\" \",t,\" \"),r.a.createElement(\"p\",null,\" \",n,\" \")))},d=function(e){var t=e.robots;return r.a.createElement(\"div\",null,t.map(function(e,n){return r.a.createElement(m,{key:n,id:t[n].id,name:t[n].name,email:t[n].email})}))},b=function(e){e.searchfield;var t=e.searchChange;return r.a.createElement(\"div\",{className:\"pa2\"},r.a.createElement(\"input\",{className:\"pa3 ba b--green bg-lightest-blue\",type:\"search\",placeholder:\"search robots\",onChange:t}))},f=function(e){return r.a.createElement(\"div\",{style:{overflow:\"scroll\",border:\"5px solid black\",height:\"800px\"}},e.children)},g=(n(15),function(e){function t(){var e;return Object(l.a)(this,t),(e=Object(s.a)(this,Object(h.a)(t).call(this))).onSearchChange=function(t){e.setState({searchfield:t.target.value})},e.state={robots:[],searchfield:\"\"},e}return Object(u.a)(t,e),Object(i.a)(t,[{key:\"componentDidMount\",value:function(){var e=this;fetch(\"https://jsonplaceholder.typicode.com/users\").then(function(e){return e.json()}).then(function(t){return e.setState({robots:t})})}},{key:\"render\",value:function(){var e=this,t=this.state.robots.filter(function(t){return t.name.toLowerCase().includes(e.state.searchfield.toLowerCase())});return 0===this.state.robots.length?r.a.createElement(\"h1\",null,\"Loading\"):r.a.createElement(\"div\",{className:\"tc\"},r.a.createElement(\"h1\",{className:\"f2\"},\"RoboFriends\"),r.a.createElement(b,{searchChange:this.onSearchChange}),r.a.createElement(f,null,r.a.createElement(d,{robots:t})))}}]),t}(a.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));n(16);c.a.render(r.a.createElement(g,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},8:function(e,t,n){e.exports=n(17)}},[[8,1,2]]]);","extractedComments":[]}